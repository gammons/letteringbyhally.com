---
const navItems = [
  { href: '/services', label: 'Services' },
  { href: '/portfolio', label: 'Portfolio' },
  { href: '/pricing', label: 'Pricing' },
  { href: '/about', label: 'About' },
  { href: '/faq', label: 'FAQ' },
  { href: '/contact', label: 'Contact' },
];

const currentPath = Astro.url.pathname;
---

<header class="site-header">
  <div class="container">
    <nav class="nav">
      <a href="/" class="logo">Lettering by Hally</a>

      <button class="nav-toggle" aria-label="Toggle navigation" aria-expanded="false">
        <span></span>
        <span></span>
        <span></span>
      </button>

      <ul class="nav-menu">
        {navItems.map(item => (
          <li>
            <a
              href={item.href}
              class={currentPath === item.href ? 'active' : ''}
              aria-current={currentPath === item.href ? 'page' : undefined}
            >
              {item.label}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
</header>

<style>
  .site-header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(250, 249, 247, 0.95);
    transition: background-color var(--transition-base), box-shadow var(--transition-base);
    z-index: 1000;
    height: var(--header-height);
  }

  .site-header.scrolled {
    background: var(--color-warm-white);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: var(--header-height);
  }

  .logo {
    font-family: var(--font-display);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-ink-black);
    text-decoration: none;
  }

  .logo:hover {
    color: var(--color-gold-accent);
  }

  .nav-toggle {
    display: none;
    flex-direction: column;
    gap: 4px;
    background: none;
    border: none;
    cursor: pointer;
    padding: 8px;
  }

  .nav-toggle span {
    display: block;
    width: 24px;
    height: 2px;
    background-color: var(--color-ink-black);
    transition: all var(--transition-base);
  }

  .nav-menu {
    display: flex;
    gap: var(--space-lg);
    list-style: none;
  }

  .nav-menu a {
    font-size: 0.95rem;
    font-weight: 500;
    letter-spacing: 0.02em;
    color: var(--color-ink-black);
    text-decoration: none;
    position: relative;
    transition: color var(--transition-base);
  }

  .nav-menu a::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background-color: var(--color-gold-accent);
    transition: width var(--transition-base);
  }

  .nav-menu a:hover::after,
  .nav-menu a.active::after {
    width: 100%;
  }

  .nav-menu a.active {
    color: var(--color-gold-accent);
  }

  @media (max-width: 768px) {
    .nav-toggle {
      display: flex;
    }

    .nav-menu {
      position: fixed;
      top: var(--header-height);
      left: 0;
      right: 0;
      background-color: var(--color-warm-white);
      background-image: none;
      flex-direction: column;
      padding: var(--space-lg);
      gap: var(--space-md);
      transform: translateX(100%);
      transition: transform var(--transition-slow);
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .nav-menu.active {
      transform: translateX(0);
    }
  }
</style>

<script>
  // Header scroll effect
  const header = document.querySelector('.site-header');
  const navToggle = document.querySelector('.nav-toggle');
  const navMenu = document.querySelector('.nav-menu');

  window.addEventListener('scroll', () => {
    if (window.scrollY > 50) {
      header?.classList.add('scrolled');
    } else {
      header?.classList.remove('scrolled');
    }
  });

  // Mobile menu toggle
  navToggle?.addEventListener('click', () => {
    const isExpanded = navToggle.getAttribute('aria-expanded') === 'true';
    navToggle.setAttribute('aria-expanded', String(!isExpanded));
    navMenu?.classList.toggle('active');
  });
</script>
