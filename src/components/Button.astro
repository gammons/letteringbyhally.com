---
export interface Props {
  href?: string;
  variant?: 'primary' | 'outline' | 'text';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
}

const {
  href,
  variant = 'primary',
  size = 'md',
  class: className = ''
} = Astro.props;

const Element = href ? 'a' : 'button';
---

<Element
  href={href}
  class:list={['btn', `btn-${variant}`, `btn-${size}`, className]}
>
  <slot />
</Element>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: var(--space-xs);
    font-family: var(--font-body);
    font-weight: 500;
    text-decoration: none;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all var(--transition-base);
    letter-spacing: 0.02em;
  }

  .btn:focus-visible {
    outline: 2px solid var(--color-gold-accent);
    outline-offset: 2px;
  }

  /* Variants */
  .btn-primary {
    background-color: var(--color-ink-black);
    color: var(--color-warm-white);
    border-color: var(--color-ink-black);
  }

  .btn-primary:hover {
    background-color: var(--color-gold-accent);
    border-color: var(--color-gold-accent);
    color: var(--color-warm-white);
  }

  .btn-outline {
    background-color: transparent;
    color: var(--color-ink-black);
    border-color: var(--color-ink-black);
  }

  .btn-outline:hover {
    background-color: var(--color-ink-black);
    color: var(--color-warm-white);
  }

  .btn-text {
    background-color: transparent;
    color: var(--color-ink-black);
    border-color: transparent;
    text-decoration: underline;
    text-underline-offset: 4px;
  }

  .btn-text:hover {
    color: var(--color-gold-accent);
  }

  /* Sizes */
  .btn-sm {
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
  }

  .btn-md {
    padding: 0.75rem 1.5rem;
    font-size: 1rem;
  }

  .btn-lg {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }
</style>
